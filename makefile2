# FOO="$(python test.py)"
CC := g++
NVCC := $(shell command -v nvcc 2> /dev/null)
BUILDDIR := build
TF_CFLAGS := $(shell python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))') 
TF_LFLAGS := $(shell python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))') 
INC := -I include 
LIB := -L /usr/local/cuda-9.0/lib64/


all:
ifndef NVCC
	@echo "nvcc not found. Skipping gpu build"
	$(CC) -std=c++11 -shared -o lib/zero_out.so zero_out/zero_out.cc \
		-fPIC $(TF_CFLAGS) $(TF_LFLAGS) $(INC) -O2
else
	$(NVCC) -std=c++11 -c -o $(BUILDDIR)/kernel_example.cu.o $(SRCDIR)/kernel_example.cu.cc \
		$(TF_CFLAGS) $(INC) $(LIB) -x cu -Xcompiler -fPIC

	$(CC) -std=c++11 -shared -o $(TARGET) $(SRCDIR)/kernel_example.cc \
		$(BUILDDIR)/kernel_example.cu.o -fPIC $(TF_CFLAGS) $(TF_LFLAGS) \
		$(INC) $(LIB) -O2 -lcudart
endif

